version: '3'

services:
  node:
    build: ./
    container_name: node_js_tasks_api_node
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - BASE_URL=http://localhost
      - PORT=3000
      - CORS_ORIGIN='http://localhost:'
      - JWT_SECRET=5S_AvFBQJ64QxJ3wywkEXGlraKbvIRZfzAMxu3KU
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - DB_NAME=node_js_tasks_api
      - DB_USERNAME=root
      - DB_PASSWORD=node
      - DB_HOST=database
      - DB_DIALECT=mysql
    volumes:
      - project:/var/www/html/project
    command: npm start
    networks:
      - node_js_tasks_api_network
    depends_on:
      - database
      - rabbitmq

  database:
    image: mysql
    hostname: mysql
    container_name: node_js_tasks_api_mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: node
      MYSQL_DATABASE: node_js_tasks_api
    volumes:
      - database_data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - node_js_tasks_api_network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    container_name: node_js_tasks_api_rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - node_js_tasks_api_network

volumes:
  database_data:
  project:


networks:
  node_js_tasks_api_network:
    driver: bridge
